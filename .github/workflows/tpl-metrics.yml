name: TPL Metrics Collection

on:
  schedule:
    # Run every hour at 15 minutes past the hour
    - cron: '15 * * * *'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      custom_message:
        description: 'Custom commit message'
        required: false
        default: 'Automated TPL metrics collection'

jobs:
  collect-tpl-metrics:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Allow writing to repository
      actions: read    # Allow reading workflow files
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # Fetch full history
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TPL metrics collection
      run: npm run collect-multiview
      
    - name: Commit and push data
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add data files first
        git add data/
        
        # Only proceed if there are changes
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          # Commit the changes
          git commit -m "${{ github.event.inputs.custom_message || 'Automated TPL metrics collection' }} - $(date -u +%Y-%m-%d\ %H:%M\ UTC)"
          
          # Try to push with retry and conflict resolution
          for i in {1..3}; do
            if git push origin main; then
              echo "Successfully pushed on attempt $i"
              break
            else
              echo "Push failed on attempt $i, pulling latest changes..."
              
              # Fetch latest and rebase our commit on top
              git fetch origin main
              git rebase origin/main
              
              if [ $? -eq 0 ]; then
                echo "Rebase successful, retrying push..."
                sleep 2
              else
                echo "Rebase failed, aborting..."
                git rebase --abort
                break
              fi
            fi
          done
        fi
        
    - name: Trigger Vercel Deploy Hook
      if: success()  # Only run if previous steps succeeded
      run: |
        if [[ -n "${{ secrets.VERCEL_DEPLOY_HOOK_URL }}" ]]; then
          echo "üöÄ Triggering Vercel deployment..."
          curl -X POST "${{ secrets.VERCEL_DEPLOY_HOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{"ref": "main", "name": "Auto-deploy after TPL metrics collection"}'
          echo "‚úÖ Vercel deployment triggered successfully"
        else
          echo "‚ö†Ô∏è  VERCEL_DEPLOY_HOOK_URL secret not found - skipping auto-deploy"
        fi
        
    - name: Upload artifacts (backup)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: tpl-metrics-${{ github.run_number }}
        path: |
          data/daily/*.json
          data/raw/**/*.json
        retention-days: 30
